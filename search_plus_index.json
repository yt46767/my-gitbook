{"./":{"url":"./","title":"首页","keywords":"","body":"欢迎大家，来到我的书世界！ 目录清单： ├─1_FONTEND 前端 │ ├─1_BASIS 基础 │ │ ├─1_CSS │ │ │ └─16_ICON 图标 │ │ ├─2_HTML │ │ ├─3_JAVASCRIPT │ │ │ └─1_EXAMPLE 示例 │ │ ├─4_TYPESCRIPT │ │ └─5_HTTP │ ├─2_FRAMEWORK 框架 │ │ ├─1_VUE │ │ │ └─DATABIND 双向数据绑定 │ │ ├─2_MiniProgram 小程序 │ │ ├─3_NODE │ │ │ └─13_NPM │ │ ├─4_REACT-NAITVE │ │ ├─5_REACT │ │ ├─6_Angular │ │ └─7_Jquery │ ├─3_DOCUMENT 文档 │ │ ├─1_Weekly 科技周刊 │ │ ├─2_WIKI │ │ ├─3_Interview 面试 │ │ ├─4_Recuit 招聘 │ │ ├─5_Think 思考 │ │ └─6_MEITUAN 美团技术 │ ├─4_ToolChain 工具链 │ │ ├─1_GIT │ │ ├─2_GRUNT │ │ └─3_BOWER │ ├─5_Monitor 前端监控 │ └─6_Browser 浏览器 │ └─1_RunJS ├─2_BACKSTAGE 后台 │ ├─1_BASIS 基础 │ │ └─1_JAVA │ │ └─EXAMPLE │ └─CRUD ├─3_TOOL 工具 │ ├─1_DOCKER │ │ └─IMAGES 镜像 │ │ └─GITLAB │ ├─2_GITBOOK │ │ └─1_GithubPage │ ├─3_GO │ ├─4_NODE │ │ └─SHELL │ ├─5_VSCODE │ │ └─PLUGINS 插件 │ │ └─DIY 自定义 │ │ └─VIEWINBROWSER 浏览器预览（支持任何文件） │ ├─6_VPN │ │ └─Vultr │ ├─7_GITHUB │ └─8_MARKDOWN ├─4_SYSTEM 系统 │ ├─1_CENTOS │ ├─2_UBUNTU │ ├─3_WINDOW │ │ ├─NGINX │ │ └─SHELL │ ├─4_MAC │ └─5_IPHONE ├─5_LIFE 生活 │ ├─1_EXAM 考试 │ │ └─MBA │ │ ├─APPLY 报名 │ │ │ └─HUAKE 华中科技大学 │ │ ├─PREPARE 准备 │ │ │ └─EXAMPROCESS 考试流程 │ │ └─UNIVERSITY 大学 │ │ ├─BJLG 北京理工大学 │ │ │ └─ADIMISSIONGUIDE 招生简章 │ │ └─WUDA 武汉大学 │ │ ├─EARLIERINTERVIEW 提前面试 │ │ │ ├─2019 │ │ │ └─2020 │ │ └─JOINTEXAM 联考 │ │ └─2020 │ ├─3_COMPANY 企业 │ ├─4_THINK 思考 │ ├─5_HISTORY 历史 │ └─6_NOUS 常识 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 12:43:32 "},"1_FONTEND/":{"url":"1_FONTEND/","title":"前端","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-11 15:56:24 "},"1_FONTEND/1_BASIS/":{"url":"1_FONTEND/1_BASIS/","title":"基础","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 10:27:00 "},"1_FONTEND/1_BASIS/1_CSS/":{"url":"1_FONTEND/1_BASIS/1_CSS/","title":"CSS","keywords":"","body":" video标签的样式 参考：https://blog.csdn.net/qq_20757489/article/details/87879820 object-fit:cover;https://blog.csdn.net/wuqingyou_w/article/details/51671356 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 17:59:25 "},"1_FONTEND/1_BASIS/1_CSS/SCSS.html":{"url":"1_FONTEND/1_BASIS/1_CSS/SCSS.html","title":"SCSS","keywords":"","body":" &的复合选择器 & 必须作为选择器的第一个字符，其后可以跟随后缀生成复合的选择器 参考：https://www.jianshu.com/p/f5b41ce5580c Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 17:57:53 "},"1_FONTEND/1_BASIS/1_CSS/16_ICON/":{"url":"1_FONTEND/1_BASIS/1_CSS/16_ICON/","title":"图标","keywords":"","body":" 阿里的免费图标： https://www.iconfont.cn/search/index?q=%E4%B9%A6%E7%B1%8D&page=1 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 20:52:03 "},"1_FONTEND/1_BASIS/2_HTML/":{"url":"1_FONTEND/1_BASIS/2_HTML/","title":"HTML","keywords":"","body":" HTML转义字符对照表： http://tool.oschina.net/commons?type=2 字符|转义字符 :-:|:-: \"|\" &|& |> Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 18:01:18 "},"1_FONTEND/1_BASIS/3_JAVASCRIPT/":{"url":"1_FONTEND/1_BASIS/3_JAVASCRIPT/","title":"JAVASCRIPT","keywords":"","body":"伪代码 不正式、不标准、接近自然语言的语言，把程序员的意思表达出来。 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 10:27:52 "},"1_FONTEND/1_BASIS/3_JAVASCRIPT/1_EXAMPLE/":{"url":"1_FONTEND/1_BASIS/3_JAVASCRIPT/1_EXAMPLE/","title":"示例","keywords":"","body":"移动端chartjs https://github.com/shixy/JChart 文件上传（ajaxfileupload.js）及后台接口 https://github.com/caiweile/fileupload_demo1 移动端-证券行情组件 https://github.com/yezhou05/html54stock B2C商城系统 PC端+H5移动端 + 微信端 快速为你构建自己的商城系统 https://github.com/Verytops/verydows H5直播 斗鱼直播的github Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 10:25:17 "},"1_FONTEND/1_BASIS/4_TYPESCRIPT/":{"url":"1_FONTEND/1_BASIS/4_TYPESCRIPT/","title":"TYPESCRIPT","keywords":"","body":" 【问题】Cannot find module '../../package.json'. Consider using '--resolveJsonModule' to import module with '.json' extensionts(2732) STEP 1:{ \"compilerOptions\": { \"resolveJsonModule\": true, } } STEP 2: restart vscode https://github.com/microsoft/TypeScript/issues/25400 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 18:12:31 "},"1_FONTEND/1_BASIS/5_HTTP/":{"url":"1_FONTEND/1_BASIS/5_HTTP/","title":"HTTP","keywords":"","body":" 前端缓存策略 大家可以想象我们使用 a.js 的场景，我们一般都是输入网址，访问一个 html 文件，html文件中会引入 js、css、图片等资源。所以呢，我们在html上做些手脚。我们不让 html 文件缓存，每次访问 html 都去请求服务器。所以浏览器每次都能拿到最新的html资源。a.js 内容更新的时候，我们修改一下 html 中 a.js 的版本号。 第一次访问 html 浏览器下载0.0.1版本的a.js文件。浏览器再次访问 html，发现还是0.0.1版本的a.js文件，则使用本地缓存。某一天a.js变了，我们的html文件也相应变化如下： 浏览器再次访问html，发现【test.com/a.js?versio… a.js。如此往复。所以，通过设置html不缓存，html引用资源内容变化则改变资源路径的方式，就解决了无法及时得知资源更新的问题。当然除了以版本号来区分，也可以以 MD5hash 值来区分。 如 使用webpack打包的话，借助插件可以很方便的处理。 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 18:16:14 "},"1_FONTEND/2_FRAMEWORK/":{"url":"1_FONTEND/2_FRAMEWORK/","title":"框架","keywords":"","body":"（空） Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 10:31:11 "},"1_FONTEND/2_FRAMEWORK/1_VUE/":{"url":"1_FONTEND/2_FRAMEWORK/1_VUE/","title":"VUE","keywords":"","body":"vue2+element-ui https://github.com/bailicangdu/vue2-elm Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 22:03:16 "},"1_FONTEND/2_FRAMEWORK/1_VUE/DATABIND/":{"url":"1_FONTEND/2_FRAMEWORK/1_VUE/DATABIND/","title":"双向数据绑定","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-11 15:57:12 "},"1_FONTEND/2_FRAMEWORK/2_MiniProgram/":{"url":"1_FONTEND/2_FRAMEWORK/2_MiniProgram/","title":"小程序","keywords":"","body":" 小程序的教程： https://www.imooc.com/article/45665 https://www.jianshu.com/p/6f8d74be3ff8 (入门) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 18:02:51 "},"1_FONTEND/2_FRAMEWORK/3_NODE/":{"url":"1_FONTEND/2_FRAMEWORK/3_NODE/","title":"NODE","keywords":"","body":"爬虫 https://github.com/ecitlm/Node-SpliderApi sockio chat:https://github.com/plhwin/nodejs-socketio-chat Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 09:56:37 "},"1_FONTEND/2_FRAMEWORK/3_NODE/13_NPM/":{"url":"1_FONTEND/2_FRAMEWORK/3_NODE/13_NPM/","title":"NPM","keywords":"","body":" yarn的安装 tnpm i yarn -g yarn的使用 （错误）yarn i （正确）yarn install Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 18:17:04 "},"1_FONTEND/2_FRAMEWORK/4_REACT-NAITVE/":{"url":"1_FONTEND/2_FRAMEWORK/4_REACT-NAITVE/","title":"REACT-NAITVE","keywords":"","body":"美食 https://github.com/ZevenFang/react-native-redux-zhihudaily 知乎日报 https://github.com/ZevenFang/react-native-redux-zhihudaily Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 21:43:38 "},"1_FONTEND/2_FRAMEWORK/5_REACT/":{"url":"1_FONTEND/2_FRAMEWORK/5_REACT/","title":"REACT","keywords":"","body":"react兼容ie react-redux-support-ie8 https://github.com/zhoulijie/react-redux-support-ie8 react/redux 服务端渲染、路由filter、websocket同步 https://github.com/ichenzhifan/react-todomvc-full Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 22:10:32 "},"1_FONTEND/2_FRAMEWORK/6_Angular/":{"url":"1_FONTEND/2_FRAMEWORK/6_Angular/","title":"Angular","keywords":"","body":"require + angular + bootstrap + api模拟 https://github.com/mmillet/angular-seed Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 09:36:33 "},"1_FONTEND/2_FRAMEWORK/7_Jquery/":{"url":"1_FONTEND/2_FRAMEWORK/7_Jquery/","title":"Jquery","keywords":"","body":"让文本框(textarea/input)或div具备插入表情功能 https://github.com/eshengsky/jQuery-emoji Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 09:37:41 "},"1_FONTEND/3_DOCUMENT/":{"url":"1_FONTEND/3_DOCUMENT/","title":"文档","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 21:16:38 "},"1_FONTEND/3_DOCUMENT/1_Weekly/":{"url":"1_FONTEND/3_DOCUMENT/1_Weekly/","title":"科技周刊","keywords":"","body":" 阮一峰——科技爱好者周刊 alloyteam——技术日报 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 18:18:14 "},"1_FONTEND/3_DOCUMENT/2_WIKI/":{"url":"1_FONTEND/3_DOCUMENT/2_WIKI/","title":"WIKI","keywords":"","body":" wiki 概述tapd系统里模块 作用： 文档 参考：tapd的wiki模块 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 18:19:04 "},"1_FONTEND/3_DOCUMENT/3_Interview/":{"url":"1_FONTEND/3_DOCUMENT/3_Interview/","title":"面试","keywords":"","body":" HTTP 状态码 1xx 临时响应（服务端响应，并等待中） 2xx 成功 3xx 重定向 4xx 请求错误（web服务器错误） 5xx 服务器错误 参考：https://blog.csdn.net/u014346301/article/details/53995333 HTTP1、HTTPS版本区别[安全点] https是基于ssl加密的http协议 HTTP1、HTTP2版本区别[优化点] HTTP2压缩消息头，减少带宽，提高传输速率 允许多路复用HTTP1.1: 浏览器客户端在同一时间，针对同一域名下的请求有一定数量限制（连接数量），超过限制会被阻塞HTTP2: 允许同时通过单一的HTTP/2连接发送多重请求-响应信息 二进制分帧 将所有的传输信息分割为更小的信息或者帧，并对他们进行二进制编码 浏览器访问页面过程 步骤 ： DNS 解析:将域名解析成 IP 地址 TCP 连接：TCP 三次握手 发送 HTTP 请求 服务器处理请求并返回 HTTP 报文 浏览器解析渲染页面 断开连接：TCP 四次挥手 详解 ： TCP 三次握手 客户端发送一个带 SYN=1，Seq=X 的数据包到服务器端口（第一次握手，由浏览器发起，告诉服务器我要发送请求了） 服务器发回一个带 SYN=1， ACK=X+1， Seq=Y 的响应包以示传达确认信息（第二次握手，由服务器发起，告诉浏览器我准备接受了，你赶紧发送吧） 客户端再回传一个带 ACK=Y+1， Seq=Z 的数据包，代表“握手结束”（第三次握手，由浏览器发送，告诉服务器，我马上就发了，准备接受吧） 浏览器解析渲染页面 浏览器内核拿到内容后，渲染步骤如下： 解析HTML，构建DOM树 解析CSS，生成CSS规则树 合并DOM树和CSS规则，生成render树 布局render树（Layout/reflow，布局/回流），负责各元素尺寸、位置的计算 绘制render树（paint），绘制页面像素信息 注意： 布局/回流，早于绘制 TCP四次挥手 参考：https://juejin.im/post/5c7646f26fb9a049fd108380 浏览器原理 进程 V8引擎（javascript引擎） javascript执行 读取a = 2 查找当前作用域（集合）是否当前变量声明 有，则赋值 没有，则向上级作用域（集合）查找 安全 参考:https://blog.csdn.net/qq_36367995/article/details/8027921 XSS攻击（跨站脚本攻击） 原理  利用html的一些漏洞来进行注入脚本 例子 （1）插入一个script标签,或者直接进行页面弹窗 （2）通过你的input植入脚本，获取数据库内容 防御[安全点] 输入过滤 输入侧过滤 方法一 escape('XXXX') 方法二转义HTML 采用完善的转义库 结论 解决特定的XSS问题 纯前端渲染 静态HTML、明确告诉浏览器设置的内容（比如：文本、样式、属性）不让浏览器被欺骗、不包含业务数据 CSRF攻击（跨站点伪造请求） 原理  攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并运行一些操作（如发邮件，发消息，甚至财产操作如转账和购买商品）。 例子  【来源】假如一家银行用以运行转账操作的URL地址下： http://www.examplebank.com/withdrawaccount=AccoutName&amount=1000&for=PayeeName  那么，一个恶意攻击者可以在另一个网站上放置如下代码：  如果有账户名为Alice的用户访问了恶意站点，而她之前刚访问过银行不久，登录信息尚未过期，那么她就会损失1000资金。 防御[安全点] （1）判断http的header中Referer字段，是否与目标地址同域。（2）请求入参，增加token字段校验。token由账户+密码+时间戳+随机数组成，它具有时效性。 SQL 注入 原理 解决 前端原理 javascript预解释 读取var a 查看当前作用域（集合）是否有当前变量声明 没有，则当前作用域（集合）声明此变量 有，则忽略 前端基础 CSS 优先级 基本公式： 内联 > ID选择器 > 类选择器 > 标签选择器 复杂样式的计算方法： A 的值等于 1 的前提是存在内联样式, 否则 A = 0 B 的值等于 ID选择器 出现的次数 C 的值等于 类选择器 和 属性选择器 和 伪类 出现的总次数 D 的值等于 标签选择器 和 伪元素 出现的总次数 计算出： {A,B,C,D} 排序方法： A比较，谁大谁优先级高 A相等时， B比较，谁大谁优先级高 B相等时， C比较，谁大谁优先级高 C相等时， D比较，谁大谁优先级高 D相等时， 谁位置靠后谁优先级高 伪类、伪元素的区别 单位 px 概念： 精准像素 em 概念： 相对单位 计算： 基准点为父节点的字体大小，如果自身节点定义字体大小，则优先基于自身 rem 概念： 相对单位 计算 基准点为根节点html的字体大小 兼容 css3新增属性，支持chrome/firefox/IE9 javascript ES6特性 ES7特性 Proxy 用法：https://www.jianshu.com/p/77eaaf34e732 ES8特性 ES9特性 TYPESCRIPT NODE 模块 异步编程【重点】 koa 原理机制 co 原理机制 async 原理机制 v8引擎 特点 好处 疑难点 性能、稳定性、内存瓶颈优化 描述node.js以及V8的性能和稳定性优化，能对系统整体性能评估，解决内存瓶颈 高并发解决方案 SSR 伪服务端渲染 概述 关键：router mode History 编码/反编码 escape 对字符串进行编码 区别字符串转义，两者结果不一样 Unicode编码与解码 编码： stringObject.charCodeAt(index) 注： index，必需。表示字符串中某个位置的数字，即字符在字符串中的下标。 解码： 参考：https://www.w3school.com.cn/js/jsref_charCodeAt.asp 主流框架 VUE 实现原理 数据双向绑定 + 实现原理 + 方法一：proxy实现 ![Image Text](proxy-binddata1.png) ![Image Text](proxy-binddata2.png) + 方法二：Object.defineProperty实现 REACT 实现原理 数据单向绑定 + 实现原理 小程序 参考： https://juejin.im/entry/581db98fa0bb9f0058abffea 微信小f程序(WEEX) 支付宝小程序 头条小程序 京东小程序 百度小程序 状态管理器 REDUX 实现原理 REDUX 实现原理 gitbook-最全的面试题 https://www.yuque.com/gi4u62/gitbook-hi1tpd/183367e569e23fab6a071f9a8ce7ec41 伪元素 (常见) ::before (:before) ::after (:after) ::first-letter (:first-letter) ::first-line (:first-line) ::placeholder ::selection ::backdrop (不常见) ::grammar-error ::marker ::slotted() ::spelling-error ::cue (:cue) 伪类 (切换元素状态) :focus :hover :active :visited :link (元素位置) :first-child :last-child :nth-child() (元素状态) :checked :disabled :read-only :required :read-write (不常见) :nth-last-child() :any :default :dir() :empty :enabled :first :first-of-type :fullscreen :indeterminate :in-range :invalid :lang() :last-of-type :left :not() :nth-last-of-type() :nth-of-type() :only-child :only-of-type :optional :out-of-range :right :root :scope :target :valid 汇总参考：https://www.cxymsg.com/guide/ Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 10:22:24 "},"1_FONTEND/3_DOCUMENT/4_Recuit/":{"url":"1_FONTEND/3_DOCUMENT/4_Recuit/","title":"招聘","keywords":"","body":" 公司招聘信息汇总 https://github.com/ruanyf/weekly/issues/692 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-10 15:40:52 "},"1_FONTEND/3_DOCUMENT/4_Recuit/CONSIDER.html":{"url":"1_FONTEND/3_DOCUMENT/4_Recuit/CONSIDER.html","title":"考虑的公司","keywords":"","body":" 广发证券（深圳）- 前/后端开发工程师 关于我们 互联网金融技术研发组是广发证券2014年在深圳布局互联网金融技术研发最重要，也是人数最多的群组之一。我们群组成员核心大部分来自于腾讯、百度、网易有道、OPPO以及华为等知名互联网公司，有着浓厚的技术氛围和底蕴。 群组负责开发广发证券易淘金APP作为公司王牌产品，在“2017券商APP风云榜”上荣获“年度最佳APP”、“最具AI范APP”以及“业内人士最任何的APP”三项大奖，在近百个券商APP中脱颖而出。 除此之外，我们还积极推动技术的学习和分享，每年都会组织小组核心成员参加前端开发者大会、全球架构师峰会、中国软件开发者大会等多个业界知名的会议，同时也在诸如Qcon、全球移动技术大会等会议上担任讲师。由群组自主编撰的书籍《揭秘Angular》销量也达数万册，得到了国内多名技术大拿的认可和推荐，二期修订版也将于近期推出。 广发证券2019年将持续加大在IT部门的投入，不要犹豫了，平台已经为你准备好，赶快加入我们，一展胸中抱负吧！ 前端开发工程师 岗位描述 开发酷炫、具有创新交互体验的金融网站/各类APP，向投资者用户提供最佳投资、理财的Web应用服务。广发证券在金融圈内的IT技术实力数一数二，如果你想了解金融领域业务，又想实践前沿的Web技术，这里是你不容错过的平台。 岗位要求 计算机相关专业本科或以上学历； 有强烈技术好奇心，对研究各种Web前端技术具有浓厚兴趣； 熟悉JavaScript/AJAX/HTML5/CSS等前端开发技术； 熟悉各浏览器的调试工具，以及各浏览器间的差异； 有Angular/React/Vue等工业框架的实践经验者为佳； 任何客户端技术包括iOS、Android、JFC/Swing、ActionScript的认识或开发背景，我们都认为是加分； 至少熟悉一种后台开发技术（Node.js/PHP/Python/JSP或其他类似）； 了解HTTP和其他Web相关的网络协议，了解前后端联合开发的技术原理； 有RN开发经验者优先； Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-10 15:41:34 "},"1_FONTEND/3_DOCUMENT/5_Think/":{"url":"1_FONTEND/3_DOCUMENT/5_Think/","title":"思考","keywords":"","body":" 【感想】开源协同 只有去中心化、开源化、协同化，项目才能做大。航空母舰需要全世界的人贡献每个人的想法，让航空母舰更优、最优。 举例子： Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 10:24:16 "},"1_FONTEND/3_DOCUMENT/6_MEITUAN/":{"url":"1_FONTEND/3_DOCUMENT/6_MEITUAN/","title":"美团技术","keywords":"","body":" 美团技术团队 温馨提醒：文件过大，约350M，建议通过WIFI下载，或将地址复制到PC端，使用浏览器下载。【前端系列】：http://dpurl.cn/DWVhPpS【后台系列】：http://dpurl.cn/obtIVn【运维系列】：http://dpurl.cn/6zjgHFj【测试系列】：http://dpurl.cn/wfKQqy【工程师成长系列】：http://dpurl.cn/p5sPoKT【2018美团点评技术文章合辑】：http://dpurl.cn/iLGBtuS 前端PDF文档的详细地址：https://awps-assets.meituan.net/mit-x/2018-ebook-bundle3/2018-ebook-frontend.pdf Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 11:23:14 "},"1_FONTEND/5_Monitor/":{"url":"1_FONTEND/5_Monitor/","title":"前端监控","keywords":"","body":" 前端错误监控 原理 写入前端代码 window.onerror=function(a,b,c,d,e){(new Image).src=/m?p=${location.href}&} 第三方组件——badjs 错误日志监控 Doc官方git官方git-前端js官方api-doc 开始https://sentry.io/onboarding/yangtao/get-started/ vue+sentry 接入https://docs.sentry.io/platforms/javascript/vue/?_ga=2.131033679.1746061538.1566874846-1957175966.1566874846 开始https://segmentfault.com/a/1190000016309667 sentry-后台管理系统https://sentry.io/yangtao/yangtao/getting-started/javascript/ source map上报sentry auth token创建 https://sentry.io/settings/account/api/auth-tokens/ Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 18:05:07 "},"1_FONTEND/4_ToolChain/":{"url":"1_FONTEND/4_ToolChain/","title":"工具链","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-11 15:57:00 "},"1_FONTEND/4_ToolChain/1_GIT/":{"url":"1_FONTEND/4_ToolChain/1_GIT/","title":"GIT","keywords":"","body":"vscode终端使用git的bash.exe 设置：\"terminal.integrated.shell.windows\":\"E:\\Install\\Git\\Git\\bin\\bash.exe\"禁忌：\"terminal.integrated.shell.windows\":\"E:\\Install\\Git\\Git\\git-bash.exe\"这样会终端和git-bash.exe分离显示参考：https://www.cnblogs.com/iceorrange/p/10303516.html 更换git账户的密码 没用做法：让系统重新弹框给用户重新填写用户名和密码，进行提交 git config --system --unset credential.helper window系统（有用）https://my.oschina.net/Jackcrj/blog/2991933 注意：修改sourcetree,是无用的。 【问题】gitbook在window下，liveload失败的解决方案 修改，gitbook serve就崩了的解决：gitbook serve执行后，删除_bookhttps://cloud.tencent.com/developer/article/1426724复制粘贴，gitbook serve就崩了的解决：修改以下文件：C:\\Users\\tobeyang.gitbook\\versions\\3.2.2\\lib\\output\\website\\copyPluginAssets.js文件中的 112 行将 confirm: true 改为 confirm: false参考：https://www.cnblogs.com/wenhui92/p/9482629.html github的fork 拷贝源目标git仓库到自己Git仓库 回滚到某个版本 前提条件：已远程提交操作：重置到当前分支结论：虽然可以回到之前的版本，但一更新就又回到未重置前的状态。（无用功） 前提条件：已远程提交操作：回滚提交结论：回滚的是要回滚当前版本提交的内容，不能达到目的参考：https://www.cnblogs.com/hopeway-shaon/p/5740280.html 命令回滚：git refloggit reset --hard commit_idgit push origin HEAD --force前提条件：当远端设置了分支保护，则首先要将其取消，再强推；备注：HEAD就代表当前强推之后，之前的版本被覆盖了，无法再查看到。参考：https://jacheng.top/2017/02/16/Git-%E4%BB%A3%E7%A0%81%E5%9B%9E%E6%BB%9A/ 修改远程仓库地址 例：远程仓库迁移，本地提交地址需要更新操作： git remote set-url origin [url] 参考：https://ddnode.com/2015/04/14/git-modify-remote-responsity-url.html git命名规则 Project 名称 全部小写 ，并且以横杠（-）作为连字符。命名规则：[产品名称]-[项目类型]-(自定义名称)-[日期]http://res.nie.netease.com/comm/doc/tutorial/git-naming.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-21 11:29:46 "},"1_FONTEND/4_ToolChain/1_GIT/Problem.html":{"url":"1_FONTEND/4_ToolChain/1_GIT/Problem.html","title":"问题","keywords":"","body":"（空） Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-18 21:13:22 "},"1_FONTEND/4_ToolChain/2_GRUNT/":{"url":"1_FONTEND/4_ToolChain/2_GRUNT/","title":"Grunt","keywords":"","body":"Gruntfile实例 https://www.gruntjs.net/sample-gruntfile 安装 npm install -g grunt-clinpm install grunt --save-dev参考：https://www.gruntjs.net/getting-started 实现gitbook的livereload之必需插件 npm install grunt-contrib-watch --save-dev npm install grunt-open --save-dev npm install grunt-http-server --save-dev npm install grunt-shell --save-dev grunt-http-server https://www.npmjs.com/package/grunt-http-server 自定义任务 grunt.registerTask(taskName, [description,] taskFunction) grunt实现livereload https://github.com/LakesCode/learnJavascript/wiki/Grunt%E6%8F%92%E4%BB%B6%E4%B9%8BLiveReload-%E5%AE%9E%E7%8E%B0%E9%A1%B5%E9%9D%A2%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0%EF%BC%8C%E6%89%80%E8%A7%81%E5%8D%B3%E6%89%80%E5%BE%97%E7%BC%96%E8%BE%91 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-11 15:35:56 "},"1_FONTEND/4_ToolChain/3_BOWER/":{"url":"1_FONTEND/4_ToolChain/3_BOWER/","title":"BOWER","keywords":"","body":"源码 https://github.com/bower/bower Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 22:12:26 "},"1_FONTEND/6_Browser/":{"url":"1_FONTEND/6_Browser/","title":"浏览器","keywords":"","body":" chrome的控制台/开发者工具 英文chrome devtools 源码https://github.com/ChromeDevTools 教程文档（中文）https://www.html.cn/doc/chrome-devtools/network-performance/resource-loading/（英文）https://developers.google.cn/web/tools/chrome-devtools/javascript/ [Tab] performance monitor（实时性能监控） DEMO（官方示例） 实时的检测你的CSS性能“Layouts / sec”“Style recalcs / sec” 性能差的样式写法:感谢 csstriggers.com，我们知道，改变 CSS 的 top 和 left 属性会触发整个像素渲染流程：绘制，布局和组合。如果我们将这些属性用于动画，它将每秒触发几十次/上百次操作。 性能好的样式写法:但是如果你使用 CSS 的 transform 属性的 translateX/Y 来切换动画，你将会发现，这并不会触发绘制和布局，仅仅会触发组合这一阶段，因为这是基于 GPU 的，会将你的 CPU 使用率降低为基本为 0%。 performance 性能数据 window.performance.timing ![Image Text](performance-timing.png) 性能指标 DNS查询耗时 = domainLookupEnd - domainLookupStart TCP链接耗时 = connectEnd - connectStart request请求耗时 = responseEnd - responseStart 解析dom树耗时 = domComplete - domInteractive 白屏时间 = domloadng - fetchStart domready时间 = domContentLoadedEventEnd - fetchStart onload时间 = loadEventEnd - fetchStart 总结1.对于网页的测速上报需求，可以通过对Performance.timing对象的属性排列组合，计算出业务需要的测速数据。2.对于网页的性能监测需求，可以通过对Performance.memory对象进行分析，得出内存使用情况等数据。3.对于页面的其他业务监测需求，可以通过Performance提供的其他方法进行灵活使用，计算出业务所需数据 二、下面标注几个比较重要的统计阶段 页面加载完成的时间，这几乎代表了用户等待页面可用的时间loadPage = loadEventEnd - navigationStart 解析 DOM 树结构的时间，反省下你的 DOM 树嵌套是不是太多了！domReady = domComplete - responseEnd; 重定向的时间，拒绝重定向！比如，http://fudao.qq.com/ 就不该写成 http://fudao.qq.comredirect = redirectEnd - redirectStart; DNS 查询时间,页面内是不是使用了太多不同的域名导致域名查询的时间太长？lookupDomain = domainLookupEnd - domainLookupStart;详见 HTML5 prefetch 读取页面第一个字节的时间，可以理解为用户拿到你的资源占用的时间，加异地机房了么，加CDN 处理了么？加带宽了么？加 CPU 运算速度了么？TTFB 即 Time To First Byte 的意思ttfb = responseStart - navigationStart; 内容加载完成的时间，页面内容经过 gzip 压缩了么，静态资源 css、js 等压缩request = responseEnd - requestStart; 执行 onload 回调函数的时间 是否太多不必要的操作都放到 onload 回调函数里执行了，考虑过延迟加载、按需加载的策略么？ loadEvent = loadEventEnd - loadEventStart; DNS 缓存时间appcache = domainLookupStart - fetchStart; 卸载页面的时间times.unloadEvent = unloadEventEnd - unloadEventStart; TCP 建立连接完成握手的时间times.connect = connectEnd - connectStart; 加载时间 // 计算加载时间 function getPerformanceTiming () { var performance = window.performance; if (!performance) { // 当前浏览器不支持 console.log('你的浏览器不支持 performance 接口'); return; } var t = performance.timing; var times = {}; //【重要】页面加载完成的时间 //【原因】这几乎代表了用户等待页面可用的时间 times.loadPage = t.loadEventEnd - t.navigationStart; //【重要】解析 DOM 树结构的时间 //【原因】反省下你的 DOM 树嵌套是不是太多了！ times.domReady = t.domComplete - t.responseEnd; //【重要】重定向的时间 //【原因】拒绝重定向！比如，http://example.com/ 就不该写成 http://example.com times.redirect = t.redirectEnd - t.redirectStart; //【重要】DNS 查询时间 //【原因】DNS 预加载做了么？页面内是不是使用了太多不同的域名导致域名查询的时间太长？ // 可使用 HTML5 Prefetch 预查询 DNS ，见：[HTML5 prefetch](http://segmentfault.com/a/1190000000633364) times.lookupDomain = t.domainLookupEnd - t.domainLookupStart; //【重要】读取页面第一个字节的时间 //【原因】这可以理解为用户拿到你的资源占用的时间，加异地机房了么，加CDN 处理了么？加带宽了么？加 CPU 运算速度了么？ // TTFB 即 Time To First Byte 的意思 // 维基百科：https://en.wikipedia.org/wiki/Time_To_First_Byte times.ttfb = t.responseStart - t.navigationStart; //【重要】内容加载完成的时间 //【原因】页面内容经过 gzip 压缩了么，静态资源 css/js 等压缩了么？ times.request = t.responseEnd - t.requestStart; //【重要】执行 onload 回调函数的时间 //【原因】是否太多不必要的操作都放到 onload 回调函数里执行了，考虑过延迟加载、按需加载的策略么？ times.loadEvent = t.loadEventEnd - t.loadEventStart; // DNS 缓存时间 times.appcache = t.domainLookupStart - t.fetchStart; // 卸载页面的时间 times.unloadEvent = t.unloadEventEnd - t.unloadEventStart; // TCP 建立连接完成握手的时间 times.connect = t.connectEnd - t.connectStart; return times; } 参考：http://www.alloyteam.com/2015/09/explore-performance/ 【重要】表格展示页面加载分析情况 (function(w){ var resultObj = {}; //初始化相关 function UnitConversion(num){ return num >=1000 ? num/1000 + \"s\" : num + \"ms\"; } function TestTiming(timing){ var timerArr = []; var dnsTimer = {key:\"DNS查询耗时\" , value:UnitConversion(timing.domainLookupEnd - timing.domainLookupStart)}; var tcpTimer = {key:\"TCP链接耗时\" , value:UnitConversion(timing.connectEnd - timing.connectStart)}; var requestTimer = {key:\"request请求耗时\" , value:UnitConversion(timing.responseEnd - timing.responseStart)}; var domTimer = {key:\"解析dom树耗时\" , value:UnitConversion(timing.domComplete - timing.domInteractive)}; console.log(JSON.stringify(domTimer)) var pageEmptyTimer = {key:\"白屏时间\" , value:UnitConversion(timing.responseStart - timing.navigationStart)}; var domReadyTimer = {key:\"domready时间\" , value:UnitConversion(timing.domContentLoadedEventEnd - timing.navigationStart)}; var onloadTimer = {key:\"onload时间\" , value:UnitConversion(timing.loadEventEnd - timing.navigationStart)}; console.log(JSON.stringify(onloadTimer)) var allTimer = {key:\"总耗时\", value: UnitConversion((timing.domainLookupEnd - timing.domainLookupStart)+(timing.connectEnd - timing.connectStart)+(timing.responseEnd - timing.responseStart)+(timing.domComplete - timing.domInteractive)+(timing.responseStart - timing.navigationStart)+(timing.domContentLoadedEventEnd - timing.navigationStart)+(timing.loadEventEnd - timing.navigationStart))}; timerArr = timerArr.concat(dnsTimer, tcpTimer, requestTimer, domTimer, pageEmptyTimer, domReadyTimer, onloadTimer, allTimer); return timerArr; } //请求的各种资源（js,图片，样式等） function TestResource(resourcesObj){ var resourceArr = []; var len = resourcesObj.length; for(var i = len - 1;i >0;i--){ var temp = {}; var cur = resourcesObj[i]; temp.key = cur.name; temp.resValue = UnitConversion(cur.responseEnd - cur.requestStart); temp.conValue = UnitConversion(cur.connectEnd - cur.connectStart); resourceArr.push(temp); } return resourceArr; } //页面的加载方式 function pageLoadMethod(type){ var arr = []; var loadMethod = {}; loadMethod.name = \"进入页面的方式\"; var str = \"\"; switch(type){ case 0: str = '点击链接、地址栏输入、表单提交、脚本操作等方式加载'; break; case 1: str = '通过“重新加载”按钮或者location.reload()方法加载'; break; case 2: str = '网页通过“前进”或“后退”按钮加载'; break; default: str = '任何其他来源的加载'; break; } loadMethod.value = str; arr.push(loadMethod); return arr; } //输出性能数据 function outPutData(perObj){ var timerArr = TestTiming(perObj.timing); var resourcesArr = TestResource(perObj.getEntries()); var loadMethodArr = pageLoadMethod(perObj.navigation.type); console.log(\"-------页面初始化------------------------\"); console.table(timerArr); console.log(\"-------页面请求------------------------\"); console.table(resourcesArr); console.log(\"-------页面加载方式------------------------\"); console.table(loadMethodArr); } w.TestPage = outPutData; })(window); var time = 0 var interval = setInterval(function(){ if(window.performance.timing.domComplete!=0 && window.performance.timing.loadEventEnd!=0 ){ clearInterval(interval) TestPage(window.performance) } },300) 例子：查找最快的导航页 http://m.uc123.com/ http://www.uc123.com/ https://www.hao123.com/ http://www.qq123.com/ http://www.baidu.com/ http://m.baidu.com/ 从数据来看，http://m.uc123.com/夺得头冠，所以我个人把它锁定为所有浏览器的主页 参考 https://blog.csdn.net/lovenjoe/article/details/80260658 参考：https://blog.csdn.net/bxl0218/article/details/80813699 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 18:20:49 "},"1_FONTEND/6_Browser/1_RunJS/":{"url":"1_FONTEND/6_Browser/1_RunJS/","title":"RunJS","keywords":"","body":" 在线执行html/js/css http://jsrun.pro/new Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 18:09:10 "},"2_BACKSTAGE/":{"url":"2_BACKSTAGE/","title":"后台","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:24:16 "},"2_BACKSTAGE/1_BASIS/":{"url":"2_BACKSTAGE/1_BASIS/","title":"基础","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 21:38:18 "},"2_BACKSTAGE/1_BASIS/1_JAVA/":{"url":"2_BACKSTAGE/1_BASIS/1_JAVA/","title":"JAVA","keywords":"","body":"Spring MVC 1. spring - 描述 - 非侵入式 - 描述 - 非侵入式是指Spring框架的API不会在业务逻辑上出现，我们的业务逻辑应该是纯净的 - 容器 - 描述 - 可以写一个配置文件（通常是xml文件） - 在上面定义对象的名字，是否是单例，以及设置与其他对象的依赖关系 - 在容器启动之后，这些对象就被实例化好了，你直接去用就好了，而且依赖关系也建立好了 - 注： - xml文件，是一个容器 - 单例 - 描述 　　- 1、单例类只能有一个实例。 　　- 2、单例类必须自己创建自己的唯一实例。 　　- 3、单例类必须给所有其他对象提供这一实例。 - 单例模式确保某个类只有一个实例，而且自行实例化并向整个系统提供这个实例 - 概述 - 通过xml文件容器配置，java启动读取，实现容器的价值 - IOC（控制反转） - 依赖注入 - 描述 - 建立对象与对象之间依赖关系的实现 - 构造注入、set注入 - AOP（面向方面编程） - 描述 - 把日志、安全、事务管理等服务（或功能）理解成一个“方面”，完全可以剥离出来做到复用，将“方面”动态的插入到业务逻辑中 - doc http://blog.163.com/jiqiang_1984/blog/static/156664820102190325615/ 2. 整体思路 一个前端控制器统一接收和解析请求，再根据的URL，将请求分发到 Controller 3. 前端控制器（FrontController） - 描述： - 1. 实现了对应接口的DispatcherServlet - 2. 通过 RequestMapping 和 Controller 注解标识映射规则，无需通过接口依赖实现控制i器 - 3. 通过 internalResourceViewResolver 根据URL和视图名称查找视图，核心接口是 ViewResolver 4. 开发 - （1）Spring MVC 初始化 - （没有这步骤） - 注： - 采用注解映射 URL 和 Controller ，因此没有对应的步骤 - 需要我们配置 DispatcherServlet 以及其对应的 URL ，来达到接管所有请求的目的 - Spring 已经利用 Servlet3.0 定义的 ServletContainerInitializer 机制，为我们提供了默认的 AbstractAnnotationConfigDispatcherServletInitializer - 只需要像继承 HttpApplication 的 MvcApplication 一样，写一个 MyWebApplicationInitializer - （2）URL 和 View 的映射 - 实现： package s4s; import org.springframework.context.annotation.ComponentScan; import org.springframework.context.annotation.Configuration; import org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; import org.springframework.web.servlet.config.annotation.ViewResolverRegistry; import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer; import org.springframework.web.servlet.view.InternalResourceViewResolver; public class MyWebApplicationInitializer extends AbstractAnnotationConfigDispatcherServletInitializer { @Override protected Class[] getRootConfigClasses() { return new Class[] { AppConfig.class }; } @Override protected Class[] getServletConfigClasses() { return new Class[] { AppConfig.class }; } @Override protected String[] getServletMappings() { return new String[] { \"/\" }; } } @Configuration @ComponentScan class AppConfig extends DelegatingWebMvcConfiguration { @Override //重写 protected void configureViewResolvers(ViewResolverRegistry registry) { InternalResourceViewResolver viewResolver = new InternalResourceViewResolver(); viewResolver.setPrefix(\"/WEB-INF/views/\"); viewResolver.setSuffix(\".jsp\"); registry.viewResolver(viewResolver); } } - 注： - Spring MVC 的 internalResourceViewResolver 没有提供默认值，因此，我们如果不定义 Path 和扩展名，只需要 MyWebApplicationInitializer 即可。 - （实践操作）一般我们会指定将 View 放置在统一的视图目录中，使用特定的扩展名。 - Spring 同样提供了 DelegatingWebMvcConfiguration ，我们只需写一个自己的 AppConfig 继承它，重写 configureViewResolvers 方法即可。 - （3）URL 和 Controller 的映射 - 两个注解：Controller 和 RequestMapping - 注: - 我们简单的定义一个 POJO MyController 以及其简单的Home方法. - 并应用上述注解： package s4s; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.RequestMapping; @Controller public class MyController { @RequestMapping(\"/\") public String Home() { return \"home\"; } } - （实际操作）添加 /WEB-INF/views/home.jsp 视图文件，就完成了最简单的示例 - （4）使用 Model - Spring MVC 中 View 和 Model 是一对多的，提供了 ModelMap 和其子类 ModelAndView - ModelMap的基类是 LinkedHashMap - 我们修改 MyController 的代码，使用 ModelAndView 来传递一个简单 UserModel 模型，作为参数的 UserModel 对象 model，会自动将请求参数映射到 model 的属性。 - 返回值 ModelAndView 时，只不过因为 Spring MVC 模型是多个模型的列表，我们还需要指定返回模型的 Name - 实现： package s4s; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.ModelAttribute; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.servlet.ModelAndView; @Controller public class MyController { @RequestMapping(\"/\") public ModelAndView Home(@ModelAttribute UserModel model) { model.setUserName(model.getUserName() + \"~\"); return new ModelAndView(\"home\", \"model\", model); } } class UserModel { String userName = \"\"; public String getUserName() { return userName; } public void setUserName(String userName) { this.userName = userName; } } - （5）使用 View - doc http://www.cnblogs.com/wawlian/archive/2012/11/17/2775435.html 仓库: https://github.com/yt46767/SpringMVCSummary/blob/master/README.md doc: http://www.android100.org/html/201605/30/240209.html 数据类型 1. 数据类型 - 基本数据类型（8个） short、int、boolean、long、char、byte、float、double - 易漏 short、byte、char、float、double - 注意 byte的大小范围：8-128、127-0 - doc http://blog.csdn.net/xyh94233/article/details/6929332 - 易错数据类型： | 数据类型 | 位数 | 字节数 | | ---------------------------- | | double | 64位 | 8字节 | | integer | 32位 | 4字节 | | character | 16位 | 2字节 | | unicode | 8位 | 1字节 | | byte | 8位 | 1字节 | ------------------------------- 2.enum - doc http://www.cnblogs.com/hyl8218/p/5088287.html 3.arrayList & linkedList & vector - arrayList - 描述 - 异步 - 便于查询和修改 - 不便于插入和删除 - linkedList - 描述 - 可扩展性 - 便于插入和删除 - 不便于查询和修改 - vector - 描述 - 同步 - 可扩展性 - 便于查询和修改 - 不便于插入和删除 4.Hashtable & HashMap - Hashtable - 描述 - 键值不允许为null - 同步 - 继承Dectionary类 - HashMap - 描述 - 只允许一个键值为null - 异步 - 非线程安全 - 树型存储结构，实现Map接口 5.树 & 二叉树 - 树 - 描述 - 不可以为空 - 没有顺序关系 - 度最多为N - 分支度为无限制 - 二叉树 - 描述 - 可为空 - 有顺序关系 - 度最多为0 - 分支度为0,1,2 方法 1.传参 - 参数类型 - 基本类型 - 对象类型 2.参数 - 形式参数 - 定义函数时，写在括号里的参数 - 实际参数 - 调用函数时，写在括号里的参数 3.== & equals - == - 描述 -用于八种基本数据类型，是比值 - equals - 描述 - 用于对象，是比地址 4.this & super - this - 描述 调用本类的属性和方法 - 特殊 public class className{ public static dataType className1(dataType2 param2){ /* 错误 static修饰方法，this不能使用 */ this.property = \"111\"; this.method(); } } - super - 描述 调用父类的属性和方法 - 特殊 public class className{ public static dataType className1(dataType2 param2){ /* 错误 static修饰方法，super不能使用 */ super.property = \"111\"; super.method(); } } 5.length - 方法 - 如：String.length(); - 属性 - 如：数组.length = 10; 异常 1.处理异常 - 关键字 - throw - 描述 - 往方法内部抛出异常 - throws - 描述 - 往方法外部抛出异常 - 常用 - try - catch - finally 修饰符 1.final & static - final - 描述: - 修饰变量、方法、类 - 作为全局变量，一定要附初始值 - 如： public class className{ public final dataType paramName = initialValue; //全局变量，一定要附初始值 public void className1(dataType1 param1){ final dataType1 paramName1; //全局变量，可不附初始值 } } - 注： - 全局变量，才可以用public、protected、default、private - 类函数，才可以用public、protected、default、private - 方法变量，用不了public、protected、default、private - 特殊: final static ，一定要附初始值 - 如： final static paramName = initialValue; - \"三不\" - 不重写 - 如： public class className{ public final dataType className1(dataType1 param1){ ... } /* 错误 final修饰的类方法，不能重写 */ public final dataType className1(dataType2 param2){ ... } } - 不继承 - 如： public final class className1 { ... } /* 此题，错误 final修饰类，不可被继承 */ public class className2 extends className1 { ... } - 不改变 - 如： public class className{ public final String paramName = \"111\"; ... /* 错误 final修饰后，不能改变 */ paramName = \"1\"; } - doc http://yqgao.blog.51cto.com/773490/170194 - static - 描述: 作为全局变量，可以不附初始值 - 如： public class className{ public static String paramName; public void className1(type1 param1){ ... } } 2.访问控制符 - 描述 ----------------------------------------------- | 访问控制符 | 类内部 | 本包 | 子类 | 外部包 | ----------------------------------------------- | public | 允许 | 允许 | 允许 | 允许 | | protected | 允许 | 允许 | 允许 | 拒绝 | | default | 允许 | 允许 | 拒绝 | 拒绝 | | private | 允许 | 拒绝 | 拒绝 | 拒绝 | ----------------------------------------------- - doc http://www.cnblogs.com/jingmengxintang/p/5898900.html 同步与异步 1.线程 - 五种状态 - 新建 - 就绪 - 运行 - 阻塞 - 终止 - 线程同步 - wait() 让当前线程等待 - sleep() 在指定时间暂停线程 - notify() 与 wait() 同时使用 ，相当于解锁 - notifyAll() 全部解锁 IO层 1.collection - 结构： ＩＯ管道流 缓冲流 转换流 打印流 回压流 过滤流 数据流 内存流 对象流 随机访问流 - 描述： 可以将文件同时读写出来 2.字符流 - 读取输入流 InputStreamReader -> BufferedReader 读 字节流 转 字符流 传 输入流 读 字符输入流 - 发送输出流 BufferedWriter -> OutputStreamWriter 写 字符输出流 字符流 转 字节流 传 底层传输流 系统 1.GC - 描述： - GC, gabage collection, 垃圾回收 - 达到回收的条件： - 对象超过作用域 - 严重： - 错误的垃圾回收机制，将导致系统崩溃 - 启动 - 一事 - System.gc(); - 多事 - Runtime.getruntime.gc(); 仓库： https://github.com/yt46767/JavaKnowSummary/blob/master/README.md doc: http://www.th7.cn/Program/java/201510/633422.shtml 单线程socket/多线程socket Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 09:57:09 "},"2_BACKSTAGE/CRUD/":{"url":"2_BACKSTAGE/CRUD/","title":"CRUD","keywords":"","body":" CRUD 概念指在做计算处理时的增加(Create)、读取查询(Retrieve)、更新(Update)和删除(Delete)几个单词的首字母简写，即：CRUD=Create(增加)+Retrieve(读取查询)+Update(更新/更改)+Delete(删除) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:24:44 "},"3_TOOL/":{"url":"3_TOOL/","title":"工具","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-11 15:58:14 "},"3_TOOL/1_DOCKER/":{"url":"3_TOOL/1_DOCKER/","title":"DOCKER","keywords":"","body":" Docker 建立容易迁移环境 Docker官网 https://hub.docker.com/ docker.app之preferences全解： https://blog.csdn.net/w275840140/article/details/80158972 window7的docker 快速启动docker Step1: 打开cmd Step2: 拖拽C:\\Program Files\\Docker Toolbox\\start.sh到cmd里，点击enter执行。 window的docker配置加速器 在Docker的配置“Demon”中，在“Registry mirrors”下添加：https://registry.docker-cn.com 备注：1）Docker 官方中国区 https://registry.docker-cn.com2）网易 http://hub-mirror.c.163.com3）ustc https://docker.mirrors.ustc.edu.cn 参考：https://blog.csdn.net/slibra_L/article/details/77505003 window docker的加速镜像设置：https://segmentfault.com/a/1190000016083023?utm_source=tag-newest 参考：https://segmentfault.com/a/1190000016083023?utm_source=tag-newest 查看镜像 Docker ps -a 启动镜像 docker start 镜像id参考：https://www.cnblogs.com/asxf/p/11057638.html 阿里云镜像加速 参考：控制台https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors教程https://blog.csdn.net/my__holiday/article/details/79111397 docker安装的系统 linux docker-compose用法 Docker 运行时资源限制-内存memory、交换机分区Swap、CPU docker常用命令 镜像随docker容器启动而自动启动 --restart=unless-stopped或restart=always 方法一：docker run -d --restart=unless-stopped -p 3306:3306 hub.c.163.com/library/mysql:5.7.18在-d 后添加--restart=unless-stopped下次docker启动后，mysql就会自动启动方法二：docker container update --restart=always a7328ec41e91方法三： docker run --name docker-gitlab-master_gitlab_1 -d --restart=always /bin/bash 方法四： docker exec -it docker-gitlab-master_gitlab_1 -d --restart=always /bin/bash 参考：https://blog.csdn.net/qq_38522268/article/details/83894903https://www.cnblogs.com/kaishirenshi/p/10396446.html docker的ip： https://jingyan.baidu.com/article/95c9d20d61bc1dec4f756156.html 介绍 1、Docker CLI 客户端，用来运行docker引擎创建镜像和容器 2、Docker Machine. 可以让你在windows的命令行中运行docker引擎命令 3、Docker Compose. 用来运行docker-compose命令 4、Kitematic. 这是Docker的GUI版本 5、Docker QuickStart shell. 这是一个已经配置好Docker的命令行环境 6、Oracle VM Virtualbox. 虚拟机 仓库相关操作 docker pull #从远程仓库拉取镜像到本地 docker push #推送本地镜像到远程仓库 docker search #在仓库搜索镜像 docker login #登录到官方仓库Docker Hub docker logout #退出登录 12345 镜像相关操作 docker build #从Dockerfile构建镜像 docker pull #同上 docker push #同上 docker history #显示镜像的历史信息 docker images #列出镜像 docker rmi #删除镜像 docker tag #给镜像打上tag标签 docker run #创建容器并启动容器 docker create #创建容器 docker commit #将修改后的容器生成镜像 docker load #从压缩包中加载镜像 docker import #从归档文件中创建镜像 docker save #将镜像保存到压缩文件 12345678910111213 容器相关操作 docker attach #依附到一个正在运行的容器中 docker exec #进到正在运行的容器中执行命令 docker cp #在容器和本地系统间复制文件 docker update #将一个容器内所有的进程从暂停状态中恢复 docker ps #列出主机中的容器 docker port #查找一个nat到私有网口的公共口 docker top #查看一个容器中正在运行的进程信息 docker logs #查看日志文件 docker diff #检查容器内文件系统的修改 docker status #输出容器的资源使用统计信息 docker wait #阻塞直到容器终止 docker start #启动已创建的容器 docker pause #暂停运行中的容器 docker unpause #使暂停的容器恢复运行 docker stop #停止容器运行 docker rename #容器改名 docker restart #容器重启 docker kill #关闭运行中的容器 docker rm #删除容器 docker export #导出容器内容为tar包 docker run #同上 docker create #同上 docker commit #同上 1234567891011121314151617181920212223 其他基本命令 docker events #从服务端获取实时的事件 docker info #查看系统相关信息 docker inspect #显示Docker对象的具体配置信息，包括容器，镜像，网络等 docker version #输出Docker的版本信息 1234 管理命令 docker container #容器管理 docker image #镜像管理 docker network #网络管理 docker node #节点管理 docker plugin #插件管理 docker secret #管理敏感数据及普通服务配置项 docker service #服务管理 docker stack #栈管理 docker swarm #集群管理 docker system #管理系统信息 docker volume #卷管理 参考： https://blog.csdn.net/xhyxxx/article/details/75447962 docker 设置代理vpn https://www.cnblogs.com/jacquin/p/9604576.html ssh连接docker container https://www.cnblogs.com/linguoguo/p/10248074.html 真实原理： 在Windows上搭建docker服务器需要在Windows模拟一个Linux平台，然后在Linux平台上搭建的docker服务器，所以在使用ssh工具连接docker容器的时候，使用的ip地址不是docker容器的地址，也不能使用localhost、127.0.0.1，需要使用 docker-mechine IP default命令获取到虚拟Linux的IP地址，通过这个地址使用 ssh -p xxx root@192.168.100.0（此地址是通过命令获取到的IP），然后才能登录。使用xshell登录docker容器后，利用xftp连接进行文件的传送 图解： 参考： https://www.cnblogs.com/lanrumeng/p/9764013.html https://www.cnblogs.com/qingyunzong/p/9021140.html docker exec -it a7328ec41e91 update-permissions 大杀器docker-compose的特殊命令： build 构建或重建服务 help 命令帮助 kill 杀掉容器 logs 显示容器的输出内容 port 打印绑定的开放端口 ps 显示容器 pull 拉取服务镜像 restart 重启服务 rm 删除停止的容器 run 运行一个一次性命令 scale 设置服务的容器数目 start 开启服务 stop 停止服务 up 创建并启动容器 参考： https://www.cnblogs.com/williamjie/p/9103327.html window的docker连接ssh 安装openssh-server https://www.v2ex.com/t/468079 安装ubuntu镜像，实现bash命令 https://blog.51cto.com/6226001001/1953310 https://www.cnblogs.com/xingyunfashi/p/8857093.html docker run 创建一个新的容器并运行一个命令 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 17:52:10 "},"3_TOOL/1_DOCKER/Problem.html":{"url":"3_TOOL/1_DOCKER/Problem.html","title":"问题","keywords":"","body":"【问题】Unable to find image 'hello-world 分析：这个时候不要害怕，docker只是还没有下载这个镜像，所以我们重复命令，这时我们就会发现，Docker从Docker Hub上获取到最新的Hello World镜像，下载到了本地 参考：https://blog.csdn.net/CaoMei_HuaCha/article/details/87544109 解答： 设置docker的镜像加速： 阿里（成功）https://alzgoonw.mirror.aliyuncs.com 网易http://hub-mirror.c.163.com 重启电脑，让它生效 docker run hello-world 【问题】启动web容器后，访问不到服务 原因：访问ip错了解决：docker的默认访问IP是：192.168.99.100 【问题】Error response from daemon: driver failed programming external connectivity on endpoint docker-gitlab-master_gitlab_1 (acdb8a1ee5d4d9312e0b78eb4bfd41b94782b83fcd18e2dc5d6f54113854793f): Error starting userland proxy: /forwards/expose/port returned unexpected status: 500 Error: failed to start containers: eb82f7339baf 原因：端口被占用 解决：删除占用端口的进程 查看pid:netstat -ano | findstr 10080 杀掉pid:taskkill /f /t /fi \"pid eq 2536\" 根据PID找到相应的应用名称:tasklist|findstr 10080 按 进程号 结束进程：命令：taskkill /pid 3912结束多个时，命令：taskkill /pid 80 /pid 90 强制终止进程taskkill /pid 3912 /f 参考：https://www.cnblogs.com/david-lcw/p/10228829.html 【问题】Only one usage of each socket address (protocol/network address/port) is normally permitted. 原因：这个错误是端口占用导致。解决：我们应找到此应用程序对应端口号的pid然后kill掉，即可ok参考： https://blog.csdn.net/weixin_38383877/article/details/81202287 后来，发现是window的端口占用了 解决： 查看运行的tcp端口及其进程号： netstat -ano 查看进程号对应的程序 netstat -aon|findstr pid 杀掉该程序 taskkill /f /t /im com.docker.backend.exe 参考： https://www.cnblogs.com/micenote/p/6063242.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-25 14:28:01 "},"3_TOOL/1_DOCKER/Migrate.html":{"url":"3_TOOL/1_DOCKER/Migrate.html","title":"迁移","keywords":"","body":"迁移 将本地docker容器迁移到服务端 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:08:12 "},"3_TOOL/1_DOCKER/IMAGES/":{"url":"3_TOOL/1_DOCKER/IMAGES/","title":"镜像","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 21:24:05 "},"3_TOOL/1_DOCKER/IMAGES/GITLAB/":{"url":"3_TOOL/1_DOCKER/IMAGES/GITLAB/","title":"GITLAB","keywords":"","body":"搭建本地gitlab网站 docker安装配置gitlabhttps://github.com/sameersbn/docker-gitlab 进入gitlab控制台 查看镜像名字/id docker ps -a 找到gitlab镜像id/名字 eb82f7339baf docker-gitlab-master_gitlab_1 启动gitlab镜像 docker start eb82f7339baf docker start docker-gitlab-master_gitlab_1 先启动并进入docker上的gitlabdocker exec -it a7328ec41e91 bash 进入gitlab的bash-consolecd bin && ./rails console production 查看所有用户user=User.all 参考：https://blog.csdn.net/AAA123524457/article/details/91351078 Shared Drives https://blog.csdn.net/qq_25800235/article/details/86536778参考：https://blog.csdn.net/qq_25800235/article/details/86536778 window 10 的 docker 安装 gitlab教程： https://jingyan.baidu.com/article/6b97984dd946b31ca2b0bf97.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 17:51:37 "},"3_TOOL/2_GITBOOK/":{"url":"3_TOOL/2_GITBOOK/","title":"GITBOOK","keywords":"","body":" gitbook块用法：/> 标签需正常闭合。 gitbook资料： https://www.imooc.com/article/22889 gitbook用例： https://docs.gitbook.com/accounthttps://www.jianshu.com/p/421cc442f06c 阮一峰的EcmaScript6文档 也是gitbook写成的。 网址http://es6.ruanyifeng.com/#docs/set-map#Map githubhttps://github.com/ruanyf/es6tutorial 【问题】Error: ENOENT: no such file or directory, open '_book/index.html' 描述：```warn: \"options\" property is deprecated, use config.get(key) insteadwarn: \"options.generator\" property is deprecated, use \"output.name\" insteaduse simple mode: true Error: ENOENT: no such file or directory, open '_book/index.html' + 解决方法： gitbook update tnpm run book-install ## gitbook写得好的作品 https://docs.cocos.com/creator/manual/zh/getting-started/ https://mta.qq.com/docs/?q= ## 【问题】Error loading version latest: Error: Cannot find module 'internal/util/types' 原因： 这个问题原因在于graceful-fs引入了node模块internal/util/types，此模块用处是给vm引入内置js文件，具体作用不可知也不想去考究了，重点在于此法已被废除，只有低版本nodejs和npm可用，但是强行降低node版本有点削足适履的意思，这种天怒人怨的低级bug，graceful-fs开发团队应该早就修复了才对，为什么还会出现报错，去gitbook的git仓库看了一下版本更迭，gitbook-cli默认的版本是2.6.9，最新的版本3.2.2，推测是旧版本没有使用最新版本的graceful-fs导致的问题，果然。。更新之后即可正常运行 参考： https://www.zhihu.com/question/270284604/answer/766617038 解决： gitbook fetch 3.2.2 # 安装gitbook-cli客户端 npm install gitbook-cli -g # 查看gitbook版本，并安装gitbook gitbook -V ## Gitbook个人不错的使用教程 https://skyao.gitbooks.io/learning-gitbook/content/creation/multiple_lang.html ## gitbook Error: EPERM: operation not permitted, open 原因： 不是这台机器创建的文件，由git工具拉取下来的新文件。 在windows中，创建的用户不一样，权限不一，导致部分文件没权限，最终热加载失败 解决办法： 赋予当前用户的读写权限 使用git-bash chown -R 用户名 赋权文件夹/文件 ## 【问题】Error: ENOENT: no such file or directory, stat 'E:\\kaifa\\My\\Git\\MyGitBook\\_book\\gitbook\\gitbook-plugin-fontsettings\\fontsettings.js' + 方法一 切换低版本的就行了，并且用Node V6 在book.js中加入(使用3.0.0以下的版本） 推荐是：2.6.7~2.6.4 gitbook fetch 2.6.7 + 方法二 在book目录下，如下代码新建book.json { \"plugins\": [ \"fontsettings\", \"sharing\", \"lunr\", \"search\", \"highlight\", \"livereload\" ]} 保存文件后，运行gitbook install安装插件依赖 重新执行gitbook build或gitbook serve + 方法二 gitbook serve .```参考：https://segmentfault.com/q/1010000009569245 gitbook的livereload Gitbook默认自带有5个插件： highlight： 代码高亮search： 导航栏查询功能（不支持中文）sharing：右上角分享功能font-settings：字体设置（最上方的\"A\"符号）livereload：为GitBook实时重新加载 gitbook的参考案例 https://xiaohuochai.site/utils/helper/gitbook.html gitbook官方API文档 https://docs.gitbook.com/v2-changes/important-differences具体：https://chrisniael.gitbooks.io/gitbook-documentation/content/ gitbook的api文档： https://chrisniael.gitbooks.io/gitbook-documentation/content/format/configuration.htmlhttp://www.chengweiyang.cn/gitbook/customize/book.json.html gitbook 官网(旧) - GitBook (Legacy) 新的访问不了时，可使用：https://legacy.gitbook.com/但原因其实是新官网加载太慢，让网页空置一下就出来了。 查看gitbook版本 gitbook -VCLI version: 2.3.2GitBook version: 3.2.3 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 11:55:38 "},"3_TOOL/2_GITBOOK/Plugin.html":{"url":"3_TOOL/2_GITBOOK/Plugin.html","title":"插件","keywords":"","body":" gitbook插件 logo: \"insert-logo\"高级搜索（支持中文）: \"search-pro\"代码复制按钮: \"copy-code-button\"导航目录折叠: \"expandable-chapters\"导航目录展开: \"expandable-chapters\" 导航目录折叠: \"chapter-fold\" 回到顶部: \"back-to-top-button\"在右上角添加github图标: \"github\"分享当前页面: \"sharing-plus\"页面添加页脚: \"tbfed-pagefooter\"打赏: \"donate\"自动生成目录树：\"atoc\"根据文件夹自动生成SUMMARY.md文件: \"summary\"菜单可以折叠: \"toggle-chapters\"主题插件, 修改标题和表格颜色: \"theme-comscore\"侧边栏宽度可调节: \"splitter\" 参考：http://gitbook.zhangjikai.com/plugins.html 【插件】atoc 用法：book.json \"plugins\": [ \"atoc\" ], \"pluginsConfig\": { \"atoc\": { \"addClass\": true, \"className\": \"atoc\" } } 需要生成目录树的文件： 所有内容 【插件】theme-comscore 改变文章里标题的字体颜色 【插件】theme-default 给文章里标题自动添加序号具体如：\"theme-default\": { \"showLevel\": true}, chapter-fold 使用方式： 在book.json中写入以下内容 { \"plugins\": [\"chapter-fold\"] } https://segmentfault.com/a/1190000019473512?utm_source=tag-newest 多个折叠目录插件 chapter-fold expandable-chapters-small Toggle Chapters expandable-chapters https://www.jianshu.com/p/427b8bb066e6 popup弹出大图 https://www.jianshu.com/p/427b8bb066e6 custom-favicon 修改标题栏图标 https://www.jianshu.com/p/427b8bb066e6 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-27 10:05:09 "},"3_TOOL/2_GITBOOK/Problem.html":{"url":"3_TOOL/2_GITBOOK/Problem.html","title":"问题","keywords":"","body":"windows 系统 GitBook生成PDF、epub报错Error during ebook generation: 'ebook-convert' 乱码 解决：https://www.cnblogs.com/gobyte/p/10953081.html gitbook导出的pdf不显示图片 解决：把图片放到文件的当前文件夹里，用./引入 gitbook serve 在window热加载失败的解决办法： （1）修改文件：C:\\Users\\tobeyang.gitbook\\versions\\3.2.2\\lib\\cli\\serve.js(家里电脑的路径)C:\\Users\\ASUS.gitbook\\versions\\3.2.3\\lib\\cli\\serve.js 实现：第一次启动成功后，删除_book文件夹 解决：重新编译，权限不通过。 增加代码： var process = require('child_process'); var isFirst = true; if(isFirst){ process.exec('rm -rf _book', function(err){ //当成功时，error是null if(err === null){ console.log('delete folder _book success!'); }else{ console.log('delete folder _book fail!Because: ' + err); } isFirst = null; }); } 增加异常捕获 解决：新增文件时，编译权限不通过 增加代码： .catch(function(error1){ console.log(error1); }); .catch(function(error2){ console.log(error2); }); （2）修改文件：C:\\Users\\tobeyang.gitbook\\versions\\3.2.2\\lib\\output\\website\\copyPluginAssets.js(家里电脑的路径)C:\\Users\\ASUS.gitbook\\versions\\3.2.3\\lib\\output\\website\\copyPluginAssets.js 将 confirm: true 改为 confirm: false解决：复制粘贴内容，实现热加载（3）md文件不能为空，否则编译失败。 [Error: EPERM: operation not permitted, open 'f:\\My\\GitBook\\my-gitbook_book\\LIFE\\VPN\\README.md'] { errno: -4048, code: 'EPERM', syscall: 'open', path: 'f:\\My\\GitBook\\my-gitbook\\_book\\LIFE\\VPN\\README.md' } 解决办法： md文件不能为空，既可解决！ Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 10:42:15 "},"3_TOOL/2_GITBOOK/Grammer.html":{"url":"3_TOOL/2_GITBOOK/Grammer.html","title":"GITBOOK语法","keywords":"","body":" 【用法】多层目录： javascript ECMAscript ES6特性 ES7特性 ES8特性 ES9特性 【用法】段首开头： 写法：（错误）大幅度发到付 写法：（正确） 大幅度发到付 【用法】正确的字体样式： （正确） 【用法】错误的字体样式： （错误） [优化点] [安全点] 【用法】序号加粗 1. 【用法】加圈的序号 1 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:09:36 "},"3_TOOL/2_GITBOOK/1_GithubPage/":{"url":"3_TOOL/2_GITBOOK/1_GithubPage/","title":"GITBOOK语法","keywords":"","body":"结合 GitHub Pages 使用 GitBook https://www.jianshu.com/p/3d03ab330df5一键发布https://blog.csdn.net/simplehouse/article/details/78766513发布组件-gh-pageshttps://github.com/tschaub/gh-pages Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 10:32:52 "},"3_TOOL/3_GO/":{"url":"3_TOOL/3_GO/","title":"GO","keywords":"","body":"系统调用 | syscall 底层系统 参考： https://cloud.tencent.com/developer/section/1144463 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 12:27:37 "},"3_TOOL/4_NODE/":{"url":"3_TOOL/4_NODE/","title":"NODE","keywords":"","body":"下载 http://nodejs.cn/download/ 双向视频通话技术——webrtc 参考： https://github.com/ShukriChiu/webrtc.chatdemo https://github.com/simplewebrtc/SimpleWebRTC Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 21:29:40 "},"3_TOOL/4_NODE/Problem.html":{"url":"3_TOOL/4_NODE/Problem.html","title":"问题","keywords":"","body":"npm install 报错（npm ERR! errno -4048，Error: EPERM: operation not permitted,）解决方法 直接用命令清理就行，控制台输入：npm cache clean --forcehttps://blog.csdn.net/qq_35624642/article/details/78393035 验证：用formidable上传文件 可能报错： Can t set headers after they are sent[情况1]错误: res.send(data); res.render('index', { title: TITLE }); 解决： return res.send(data); return res.render('index', { title: TITLE }); [情况2]错误： 用formidable插件来上传文件源码： form.parse(req, function(err, fields, files) { console.log('22222222222222222222222222222222'); console.log(files); if (err) { res.locals.error = err; // 接口回调：local.error TITLE = '失败'; return res.render('index', { title: TITLE }); } var extName = ''; //后缀名 switch (files.fulAvatar.type) { case 'image/pjpeg': extName = 'jpg'; break; case 'image/jpeg': extName = 'jpg'; break; case 'image/png': extName = 'png'; break; case 'image/x-png': extName = 'png'; break; } if(extName.length == 0){ res.locals.error = '只支持png和jpg格式图片'; // 接口回调：local.error TITLE = '失败'; return res.render('index', { title: TITLE }); } var avatarName = Math.random() + '.' + extName; var newPath = form.uploadDir + avatarName; console.log(newPath); fs.renameSync(files.fulAvatar.path, newPath); //重命名 }); 解决： form.parse解析的收尾，需要 return 出来。源码： form.parse(req, function(err, fields, files) { console.log('22222222222222222222222222222222'); console.log(files); if (err) { res.locals.error = err; // 接口回调：local.error TITLE = '失败'; return res.render('index', { title: TITLE }); } var extName = ''; //后缀名 switch (files.fulAvatar.type) { case 'image/pjpeg': extName = 'jpg'; break; case 'image/jpeg': extName = 'jpg'; break; case 'image/png': extName = 'png'; break; case 'image/x-png': extName = 'png'; break; } if(extName.length == 0){ res.locals.error = '只支持png和jpg格式图片'; // 接口回调：local.error TITLE = '失败'; return res.render('index', { title: TITLE }); } var avatarName = Math.random() + '.' + extName; var newPath = form.uploadDir + avatarName; console.log(newPath); fs.renameSync(files.fulAvatar.path, newPath); //重命名 res.locals.success = '上传成功'; // 接口回调：local.success TITLE = '成功'; return res.render('index', { title: TITLE }); }); Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 21:35:53 "},"3_TOOL/4_NODE/SHELL/":{"url":"3_TOOL/4_NODE/SHELL/","title":"SHELL","keywords":"","body":" node中执行shell命令 //使用插件child_process var process = require('child_process'); //清空指定文件夹下文件 process.exec('rm -fr '+copyUrl+'*',function(err){ console.log(err) //当成功是error是null }) //复制指定文件夹下文件到另一个文件下 process.exec('cp -r 复制指定文件夹路径（绝对文件夹路径） 粘贴指定文件夹路径（绝对地址）’,function(err){ console.log(err) //当成功是error是null }) https://www.jianshu.com/p/a48ac64aa3a7 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 21:04:59 "},"3_TOOL/5_VSCODE/":{"url":"3_TOOL/5_VSCODE/","title":"Vscode","keywords":"","body":"链接打开浏览器设置 // open default browserawait vscode.env.openExternal( vscode.Uri.parse('https://github.com/Microsoft/vscode/issues/66741'));参考：https://code.visualstudio.com/updates/v1_31 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-21 15:58:43 "},"3_TOOL/5_VSCODE/PLUGINS/":{"url":"3_TOOL/5_VSCODE/PLUGINS/","title":"插件","keywords":"","body":"Document This javascript的快速注释 优秀的代码除了优秀的性能、规范的格式，注释也是不可或缺的，而且注释也应该有一套标准的注释方法，特别对于 JavaScript 这种语言。 Document This 可以快速地帮你生成注释，如一些函数的注释还能帮你抽取出参数的定义等，是你编写规范代码必备的工具。 ESLint ESLint 是一个语法规则和代码风格的检查工具，可以用来保证写出语法正确、风格统一的代码。 而 VSCode 中的 ESLint 插件就直接将 ESLint 的功能集成好，安装后即可使用，对于代码格式与规范的细节还可以自定义，并且一个团队可以共享同一个配置文件，这样一个团队所有人写出的代码就可以使用同一个代码规范，在代码签入前每个人可以完成自己的代码规范检查。 Beautify Beautify 插件可以快速格式化你的代码格式，让你在编写代码时杂乱的代码结构瞬间变得非常规整，代码强迫症必备，较好的代码格式在后期维护以及他人阅读时都会有很多的便利。 插件支持的语言非常多，基本堵盖了目前所有的语言，而且你还可以自定义代码格式化的结构。 vetur vue语法高亮、智能感知、Emmet等 Bracket Pair Colorizer 成对的彩色括号 参考 https://www.cnblogs.com/zhaoshujie/p/9834654.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 00:23:11 "},"3_TOOL/5_VSCODE/PLUGINS/DIY/":{"url":"3_TOOL/5_VSCODE/PLUGINS/DIY/","title":"自定义","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:14:02 "},"3_TOOL/5_VSCODE/PLUGINS/DIY/VIEWINBROWSER/":{"url":"3_TOOL/5_VSCODE/PLUGINS/DIY/VIEWINBROWSER/","title":"浏览器预览（支持任何文件）","keywords":"","body":" view in browser(支持所有文件在浏览器预览) step1: 设置vscode快捷键 keybinding.json: step2: 设置vscode任务（configure task） 项目在vscode打开时，会自动生成.vscode文件夹（包含tasks.json） step3: 触发自定义插件 ctrl+shift+t Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:14:02 "},"3_TOOL/5_VSCODE/PLUGINS/MDAutoLinefeed.html":{"url":"3_TOOL/5_VSCODE/PLUGINS/MDAutoLinefeed.html","title":"自动换行-Markdown-AutoLinefeed","keywords":"","body":" 【vscode插件】Markdown-AutoLinefeed 让markdown文件自动换行 等价于：空格*2+回车 快捷键： 自动换行：ctrl+alt+a 自动空格替换 :ctrl+alt+f Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 21:15:30 "},"3_TOOL/6_VPN/":{"url":"3_TOOL/6_VPN/","title":"VPN","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 10:40:29 "},"3_TOOL/6_VPN/Problem.html":{"url":"3_TOOL/6_VPN/Problem.html","title":"问题","keywords":"","body":"【问题】vultr国外服务器ip被封 http://ping.chinaz.com/199.247.17.76https://www.chenweiliang.com/cwl-661.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 00:12:52 "},"3_TOOL/6_VPN/Vultr/":{"url":"3_TOOL/6_VPN/Vultr/","title":"Vultr","keywords":"","body":"vultr-我的管理平台 https://my.vultr.com/ 搭建架子ssr并开启bbr https://wistbean.github.io/vultr-vps-bbr-ss.html 搭建ssr https://www.itwordsweb.com/linux_doc/ss.html Welcome to visit:https://teddysun.com/342.html Enjoy it! 默认客户端-代理端口：1080 改为：1181 本地局域网ip: 192.168.0.103 ss服务基础操作 启动：/etc/init.d/shadowsocks start停止：/etc/init.d/shadowsocks stop重启：/etc/init.d/shadowsocks restart状态：/etc/init.d/shadowsocks status配置文件路径：/etc/shadowsocks.json卸载方法：/usr/local/src/shadowsocks.sh uninstall日志： /var/log/shadowsocks.log ping ip http://ping.chinaz.com ping port(国内) 国内http://tool.chinaz.com/port/国外https://www.yougetsignal.com/tools/open-ports/ 检测bbr是否启动 lsmod | grep bbr 【问题】500 Internal Privoxy Error firewall-cmd --zone=public --add-port=80/tcp --permanent &&  firewall-cmd --reload参考：https://www.cnblogs.com/love-wife/p/10903876.html 腾讯文档： https://docs.qq.com/doc/DS3VZcUhEWUdmVmpm 快照备份与迁移 https://www.laozuo.org/11188.html https://www.duoluodeyu.com/2481.html ISP运营商屏蔽的常见端口如下： 目的端口：137-139，协议：TCP/UDP 目的端口：593，协议：TCP/UDP 目的端口：445，协议：TCP/UDP 目的端口：4444，协议：TCP/UDP 目的端口：135，协议：TCP/UDP 目的端口：3332，协议：TCP 目的端口：9996，协议：TCP/UDP 目的端口：6669，协议：TCP 目的端口：1434，协议：TCP/UDP 目的端口：3127-3130，协议：TCP 目的端口：42，协议：TCP 目的端口：1068，协议：TCP/UDP 目的端口：5554，协议：UDP 目的端口：17185，协议：UDP 参考： https://www.jianshu.com/p/4ed1c21ff326 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 00:12:11 "},"3_TOOL/7_GITHUB/":{"url":"3_TOOL/7_GITHUB/","title":"Github","keywords":"","body":"Github Pages(三)：使用Hexo博客生成工具 https://hans2936.github.io/2018/06/06/HexoLog/ Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 09:46:16 "},"3_TOOL/7_GITHUB/Problem.html":{"url":"3_TOOL/7_GITHUB/Problem.html","title":"问题","keywords":"","body":"【问题】SEC7120: [CORS] 原点“ms-appx-web://microsoft.microsoftedge”无法支持“ms-appx-web:///assets/Fonts/BrowserMDL.ttf#Browser MDL2 Assets”的 cross-origin font 资源 https://www.cnblogs.com/20180609miss/p/10276198.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 09:23:04 "},"3_TOOL/8_MARKDOWN/":{"url":"3_TOOL/8_MARKDOWN/","title":"Markdown","keywords":"","body":"markdown语法 参考： https://github.com/nelsonkuang/markdown 代码块（```）类型 https://blog.csdn.net/derstsea/article/details/85131434 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 12:40:51 "},"4_SYSTEM/":{"url":"4_SYSTEM/","title":"系统","keywords":"","body":" 小马BI 概念智慧数据平台（驱动业务决策） 缺点 报表简单 可选择的报表类型少 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-10 16:11:10 "},"4_SYSTEM/1_CENTOS/":{"url":"4_SYSTEM/1_CENTOS/","title":"CENTOS","keywords":"","body":"实时监控日志 tail -f laravel.log 该条命令会输入laravel.log的变化，实现时时监控的目的 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-21 18:22:29 "},"4_SYSTEM/1_CENTOS/Problem.html":{"url":"4_SYSTEM/1_CENTOS/Problem.html","title":"问题","keywords":"","body":"【问题】-bash: lsof: command not found 解决：yum install lsof参考：https://blog.csdn.net/cryhelyxx/article/details/43228423 -bash: netstat: command not found yum install net-tools参考：https://blog.csdn.net/slovyz/article/details/50386240 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-21 18:10:23 "},"4_SYSTEM/2_UBUNTU/":{"url":"4_SYSTEM/2_UBUNTU/","title":"UBUNTU","keywords":"","body":"下载命令 apt-get .... 启动ssh 生成ssh key root@f031e62c7661:/var/run/sshd# ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/root/.ssh/id_rsa): Created directory '/root/.ssh'. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa. Your public key has been saved in /root/.ssh/id_rsa.pub. The key fingerprint is: SHA256:YsGovhoCRsWf+JECJKkt8TrEYKi7HyRXIIukj6r2zoA root@f031e62c7661 The key's randomart image is: +---[RSA 2048]----+ |=+o. | |X=.o o | |X=. = = | |==o= = . | |=== o + S | |O= o . | |E+o | |+ooo | |+o=+ | +----[SHA256]-----+ 注意： [fsmythe@example.com ~]$ /usr/bin/ssh-keygen -t dsa Generating public/private dsa key pair. Enter file in which to save the key (/home/fsmythe/.ssh/id_dsa): Enter passphrase (empty for no passphrase): ** (Enter 'mypassword') Enter same passphrase again: ** (Enter 'mypassword') Your identification has been saved in /home/fsmythe/.ssh/id_dsa. Your public key has been saved in /home/fsmythe/.ssh/id_dsa.pub. The key fingerprint is: 33:af:35:cd:58:9c:11:91:0f:4a:0c:3a:d8:1f:0e:e6 fsmythe@example.com 修改sshd-config允许root登陆 sed -i 's+PermitRootLogin prohibit-password+PermitRootLogin yes' /etc/ssh/sshd-config https://www.vediotalk.com/archives/606 ubuntu无脑操作直接开放root快速操作 sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config service ssh restart 进入ubuntu命令 docker exec -it f031e62c7661 /bin/bash 启动sshd命令 /usr/sbin/sshd -D & 或 service ssh start linux ssh连接本机 查看sshd启动状态： service ssh status 否时，sshd启动命令 service ssh start ssh连接 ssh root@127.0.0.1 -p 22 宿主机连接linux ssh root@172.17.179.49 -p 10022 ssh root@172.17.0.2 -p 10022 ssh root@127.0.0.1 -p 10022 ubuntu安装ssh https://www.cnblogs.com/jie-fang/p/7928406.html 重要 https://www.cnblogs.com/gavin-guo/p/11461577.html https://blog.csdn.net/weixin_33691598/article/details/92134075 ubuntu安装防火墙 https://www.cnblogs.com/xwgcxk/p/10820518.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-25 12:53:08 "},"4_SYSTEM/2_UBUNTU/Problem.html":{"url":"4_SYSTEM/2_UBUNTU/Problem.html","title":"问题","keywords":"","body":"【问题】docker的ubuntu镜像无ifconfig和ping netstat命令 apt-get update apt-get install net-tools apt-get install iputils-ping 参考： https://www.cnblogs.com/jifeng/p/9397304.html 【问题】docker apt-get update一直报错 https://blog.csdn.net/qq_29422251/article/details/78488647 【问题】ssh免密登录-permission deny(publickey,password) id_rsa.pub复制到authorized_keys(新文件) chmod -R 600 /root/.ssh 【问题】解决Ubuntu的SSH自动断线问题 https://www.jianshu.com/p/f8d9f28b830e https://www.cnblogs.com/daxin/p/5603837.html https://blog.csdn.net/qq_21405949/article/details/52539686 Ubuntu下\"sshd:unrecognized service\" https://blog.csdn.net/u013015629/article/details/70045809 iptables v1.6.1: can't initialize iptables table `filter': Permission denied (you must be root) docker run -ti --privileged ubuntu:latest docker run -ti --privileged zen_wozniak 参考： https://blog.csdn.net/Magic_Ninja/article/details/88432140 ssh_exchange_identification:read connection reset by peer https://www.cnblogs.com/taoquns/p/9590960.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-25 17:28:03 "},"4_SYSTEM/3_WINDOW/":{"url":"4_SYSTEM/3_WINDOW/","title":"WINDOW","keywords":"","body":" 记一次Git push 项目输入账号密码后无法再次弹出认证窗口且一直认证失败[fatal: Authentication failed for]的解决办法 https://my.oschina.net/Jackcrj/blog/2991933 window的edge浏览器自带滚动截图 https://www.jianshu.com/p/c9311194c6bd 我的window 10 版本 Microsoft Windows [版本 10.0.17763.593](c) 2018 Microsoft Corporation。保留所有权利。 microsoft store 个人资料设置 https://account.microsoft.com/profile/preferred-language-selector 查看运行的tcp端口及其进程号： netstat -ano 查看进程号对应的程序 netstat -aon|findstr pid 杀掉该程序 taskkill /f /t /im com.docker.backend.exe参考：https://www.cnblogs.com/micenote/p/6063242.html 文件授权 赋权给所有人完全控制CACLS /f/My/GitBook/my-gitbook/LIFE/VPN /T /C /G everyone:Fcacls F:/My/GitBook/my-gitbook/LIFE/VPN /T /C /G everyone:Fcacls F:/My/GitBook/my-gitbook /T /C /G everyone:F https://jingyan.baidu.com/article/afd8f4de4298ab34e386e966.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 21:57:52 "},"4_SYSTEM/3_WINDOW/Problem.html":{"url":"4_SYSTEM/3_WINDOW/Problem.html","title":"问题","keywords":"","body":"【问题】Microsoft store无法安装应用 https://answers.microsoft.com/zh-hans/windows/forum/windows_10-windows_store/microsoft/20f27c16-251b-4614-bf03-fd069efecb32解决方法二：试试网页版microsoft storehttps://www.microsoft.com/zh-cn/store/apps/ 【问题】需要新应用打开此ms-windows-store https://jingyan.baidu.com/article/e5c39bf5c6e0ca39d7603396.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 21:20:14 "},"4_SYSTEM/3_WINDOW/Tool.html":{"url":"4_SYSTEM/3_WINDOW/Tool.html","title":"工具","keywords":"","body":"滚动截屏生成图片的工具 FastStone Capture https://www.anxz.com/down/4295.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-27 10:53:18 "},"4_SYSTEM/3_WINDOW/SHELL/":{"url":"4_SYSTEM/3_WINDOW/SHELL/","title":"SHELL","keywords":"","body":"给这个目录赋予所有人可读可写可执行权限 chmod -R 777 /var/www 这行命令就是给“/var/www”这个目录赋予所有人可读可写可执行权限，4+2+1=7。 对应的：5=4 + 1,表示拥有可读可执行权限，但是没有写权限0 代表没有任何权限 -rw——- (600) 只有所有者才有读和写的权限-rw-r–r– (644) 只有所有者才有读和写的权限，组群和其他人只有读的权限-rwx—— (700) 只有所有者才有读，写，执行的权限-rwxr-xr-x (755) 只有所有者才有读，写，执行的权限，组群和其他人只有读和执行的权限-rwx–x–x (711) 只有所有者才有读，写，执行的权限，组群和其他人只有执行的权限-rw-rw-rw- (666) 每个人都有读写的权限 把当前目录权限授予yangtao（用户）： chown -R yangtao * 开放所有权限： chmod -R 777 * https://blog.csdn.net/u011808596/article/details/79242271 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-11 15:52:28 "},"4_SYSTEM/3_WINDOW/NGINX/":{"url":"4_SYSTEM/3_WINDOW/NGINX/","title":"NGINX","keywords":"","body":"windows下运行的Nginx,用bat实现nginx的start/stop Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-28 21:58:18 "},"4_SYSTEM/4_MAC/":{"url":"4_SYSTEM/4_MAC/","title":"MAC","keywords":"","body":" 【问题】在Mac里，ntf格式的移动硬盘不能正常写入 Mounty（免费软件） ，下载地址ntfs for Mac（付费软件） Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:42:14 "},"4_SYSTEM/5_IPHONE/":{"url":"4_SYSTEM/5_IPHONE/","title":"IPHONE","keywords":"","body":" 锁屏自动断开wifi 解决：连接的wifi设置：自动连接 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 21:17:56 "},"5_LIFE/":{"url":"5_LIFE/","title":"生活","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-11 15:57:30 "},"5_LIFE/1_EXAM/":{"url":"5_LIFE/1_EXAM/","title":"考试","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/":{"url":"5_LIFE/1_EXAM/MBA/","title":"MBA","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/APPLY/":{"url":"5_LIFE/1_EXAM/MBA/APPLY/","title":"报名","keywords":"","body":"MBA网报流程 http://dy.163.com/v2/article/detail/EE0LPRBB05169G2L.html 研招统考网报考试方式、专项计划概述以及相互关系 https://yz.chsi.com.cn/kyzx/other/201509/20150920/1295472069.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-27 12:09:56 "},"5_LIFE/1_EXAM/MBA/APPLY/HUAKE/":{"url":"5_LIFE/1_EXAM/MBA/APPLY/HUAKE/","title":"报名","keywords":"","body":"报名公告 报考专业 报考点 报名缴费 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-29 12:30:07 "},"5_LIFE/1_EXAM/MBA/PREPARE/":{"url":"5_LIFE/1_EXAM/MBA/PREPARE/","title":"准备","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/PREPARE/EXAMPROCESS/":{"url":"5_LIFE/1_EXAM/MBA/PREPARE/EXAMPROCESS/","title":"考试流程","keywords":"","body":" 考试流程 step1: 网上报名 意指： 联考/统考的报名，包含初试（笔试）、复试（面试） 网报时间：2019年10月中下旬 网报地址（学信网）：https://yz.chsi.com.cn/user/center.jsp 操作内容：（1）学历查验（2）支付报名费 step2: 现场确认 时间：2019年11月中旬 操作内容：（1）考生携带本人有效证件、毕业证原件，进行照片采集及现场验证（2）未通过学历校验考生，需携带学历认证报告等文件。（3）打印准考证：2019年12月中下旬 step3: 初试 初试时间:2019年12月底 （具体时间以教育部文件规定为准） 初试科目：综合能力（数学、逻辑、写作），英语 初试方式：统一笔试，参加工商管理硕士（MBA）全国联考 step3: 复试 复试科目：综合素质面试、政治笔试、 英语口语、听力测试 复试时间：2020年3月中旬，3月下旬出复试结果（具体时间以我校专业学位教育联合中心通知为准） 参考： 全文：http://pdc.bit.edu.cn/MBA/zsjz/120187.htm Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/","title":"大学","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/BJLG/":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/BJLG/","title":"北京理工大学","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/BJLG/ADIMISSIONGUIDE/":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/BJLG/ADIMISSIONGUIDE/","title":"招生简章","keywords":"","body":" 招生简章： http://pdc.bit.edu.cn/MBA/zsjz/120187.htm 考试流程 网上报名：  2019年10月中下旬，考生须在研招网（http://yz.chsi.com.cn/）进行网上报名（学历查验），网上支付报名费。 现场确认：  2019年11月中旬，考生携带本人有效证件、毕业证原件，进行照片采集及现场验证。 未通过学历校验考生，需携带学历认证报告等文件。 打印准考证：2019年12月中下旬 初试  初试时间: 2019年12月底 （具体时间以教育部文件规定为准） 初试科目：综合能力（数学、逻辑、写作），英语 初试方式：统一笔试，参加工商管理硕士（MBA）全国联考 复试  复试科目：综合素质面试、政治笔试、 英语口语、听力测试 复试时间： 2020年3月中旬，3月下旬出复试结果（具体时间以我校专业学位教育联合中心通知为准） ※ 不接受非第一志愿考生调剂 北京理工在职班的授课方式 沟通 电话咨询： 86-10-68945687，68918820 微信平台： BIT-PDC MBA联合会公众号： MBABIT 官方QQ备考群： 662683401 参考： 全文：http://pdc.bit.edu.cn/MBA/zsjz/120187.htm Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/","title":"武汉大学","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/","title":"提前面试","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2019/":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2019/","title":"2019","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2019/Problem.html":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2019/Problem.html","title":"题目","keywords":"","body":" 华中科大 面试有风险，准备需充分！！1、学习经历描述（填写学习期间的学习成绩表现、个人主要学习与锻炼的事项与成果等，100字以内）2、当前工作内容及业绩描述 （100字以内 ）3、自荐信 （重点列举互选的理由 ，300字以内）4、请论述攻读MBA对你职业发展的重要性和必要性。5、请举例说明，当你确定目标后，发现有多种途径或平台都可以帮助你实现目标，你是如何决策的，并阐述理由。（300字以内） 。6、假设你已经考上华中科技大学MBA，作为华中科技大学MBA学生，你将如何利用学校及MBA的平台资源，促进自己的学习和事业发展 。参考：http://www.kybang.com/?p=18120 浙大 1.请补充可以帮助我们了解您的其他信息。（400字以内）2.您的业余爱好、特长。3.您的入学期望。4.如果您加入浙大MBA大家庭后，对这个大家庭的贡献。 上海外国语大学 请描述一下你的职业目标，为什么上外MBA项目能够帮助你达到这个目标。（请详细描述，不可少于300字） 以下二道题请选择一题进行回答（请详细描述，不可少于300字）a) 请描述一个让你印象最深刻的工作失败经历，你从中学到什么？b) 请描述一件你所在的团队曾经成功解决的、让你印象最深刻的难题，并告诉我们你在其中所起到的关键性作用。 上海对外经贸 1.自我介绍和对自己优势和劣势的认识和分析（600字以内）。 2.本人报考MBA的主要目的、原因或动机。 3.对未来3—5年的职业发展规划。 参考：各大院校的提前面试题 武大以前的提面材料： https://zhuanlan.zhihu.com/p/79688957 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2020/":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2020/","title":"2020","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2020/Analyse.html":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2020/Analyse.html","title":"剖析","keywords":"","body":" 提面的分析： http://www.jinciwei.cn/i253411.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2020/Apply.html":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2020/Apply.html","title":"报考","keywords":"","body":" 提面报考地址： http://ems.whu.edu.cn/memonline/e/member/Index_file/?urd=b6db3485ab4d2d89aa270b4b13a1748e Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2020/Problem.html":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/EARLIERINTERVIEW/2020/Problem.html","title":"题目","keywords":"","body":" 【提前面试-2020年真题】请论述攻读MBA对你职业发展的重要性和必要性。(300字以内) https://www.jianshu.com/p/e94a04ecd14a 【提前面试-2020年真题】请举例说明，当你确定目标后，有多种途径或平台都可以帮助你实现目标，你是如何决策的并且阐述理由。 https://www.jianshu.com/p/11dd3c0b34b8 粤港澳大湾区成立的意义？ 答案： 加强基础设施互联互通，形成与区域经济社会发展相适应的基础设施体 系，重点共建“一中心三网”，形成辐射国内外的综合交通体系； 打造全球创新高地，合作打造全球科技创新平台，构建开放型创新体系， 完善创新合作体制机制，建设粤港澳大湾区创新共同体，逐步发展成为全球重要科技产业创新中心；  携手构建“一带一路”开放新格局，深化与沿线国家基础设施互联互通及经贸合作，深入推进粤港澳服务贸易自由化，打造升级版； 培育利益共享的产业价值链，加快向全球价值链高端迈进，打造具有国际竞争力的现代产业先导区；  共建金融核心圈，推动粤港澳金融竞合有序、协同发展，培育金融合作新平台，扩大内地与港澳金融市场要素双向开放与联通，打造引领泛珠、辐射东南亚、服务于“一带一路”的金融枢纽；  共建大湾区优质生活圈，以改善社会民生为重点，打造国际化教育高地，完善就业创业服务体系，促进文化繁荣发展，共建健康湾区。  概括： 1 加强基础设施互联互通 2 打造全球创新高地 3 携手构建“一带一路”开放新格局 4 培育利益共享的产业价值链 5 共建金融核心圈 6 共建大湾区优质生活圈 参考：https://wenku.baidu.com/view/f69b07a4a66e58fafab069dc5022aaea988f414c.html 一国两制的理解？ 答案： 1. 一国两制的含义  “一个国家，两种制度”是我国实现祖国统一的基本国策。“一个国家”是指中国的主权和领土必须完整，不容分割。中国是一个统一的国家，在国际上，代表中国的只能是中华人民共和国。“两种制度”是指在中华人民共和国这个统一主权的国家内，在祖国统一的前提下，大陆实行社会主义制度，香港、澳门和台湾实行资本主义制度。 关键词：  1 “一个国家，两种制度”是我国实现祖国统一的基本国策  2 “一个国家”是指中国的主权和领土必须完整，不容分割  3 “两种制度”是指在中华人民共和国统一主权国家内，大陆实行社会主义制度，香港、澳门和台湾实行资本主义制度 2. 一国两制的基本内容   实行“一国两制”的前提和基础是一国， 即中华人民共和国，国家主权由中华人民共和国统一行使，在国际上代表中国的只能是中华人民共和国及其中央政府，香港、澳门和台湾是中华人民共和国的组成部分；在这一前提下，大陆实行社会主义制度，而香港、澳门及台湾的则保留原有的资本主义制度和生活方式。  香港、澳门作为我国的特别行政区，是我国的地方行政区域，享有高度的自治权。除了外交和国防事务属于中央政府管理外，享有行政管理权、立法权、独立的司法权和终审权。台湾还可以享有更多的自治权。 关键词：  1 国家主权由中华人民共和国统一行使  2 国际上代表中国的只能是中华人民共和国及其中央政府  3 香港、澳门和台湾是中华人民共和国的组成部分  4 大陆实行社会主义制度，香港、澳门及台湾保留原有的资本主义制度和生活方式  5 香港、澳门作为我国的特别行政区  6 是我国的地方行政区域  7 享有高度的自治权 3. 一国两制的意义  “一个国家，两种制度”是我国实现祖国和平统一的基本国策。完成祖国统一大业，是民主根本利益所在，是全体中国人民的共同愿望，也是维护国家领土主权和民族尊严的重大原则问题。实行“一国两制”，有利于实现祖国的统一，有利于促进我国社会主义现代化建设，有利于港澳台的稳定、繁荣和发展，有利于中华民族的伟大复兴。 关键词：  1 是我国实现祖国和平统一的基本国策  2 完成祖国统一大业，是民主根本利益所在  3 是全体中国人民的共同愿望  4 是维护国家领土主权和民族尊严的重大原则问题  5 有利于实现祖国的统一  6 有利于促进我国社会主义现代化建设  7 有利于港澳台的稳定、繁荣和发展  8 有利于中华民族的伟大复兴 参考： https://wenku.baidu.com/view/2b0fb9e77e21af45b307a8dd.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/JOINTEXAM/":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/JOINTEXAM/","title":"联考","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/JOINTEXAM/2020/":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/JOINTEXAM/2020/","title":"2020","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/JOINTEXAM/2020/Analyse.html":{"url":"5_LIFE/1_EXAM/MBA/UNIVERSITY/WUDA/JOINTEXAM/2020/Analyse.html","title":"剖析","keywords":"","body":" 报考截止时间 2020年9月1日 报名前有两个阶段： 网上报名 网上确认 报名时间、考试时间、《准考证》打印，详见： 中国研究生招生信息( http://yz.chsi.com.cn)和武汉大学研究生院网站( http://www.gs.whu.edu.cn) 正式考试-笔试： 12月21日（周六）或 12月28日（周六） 录取方式： 提面+正式考试-笔试 提面申报： http://ems.whu.edu.cn/memonline/e/member/login/ 提面考试时间-深圳班： 2019.09.06晚-2019.09.08 参考：[重要] https://www.jianshu.com/p/4e4f22223524 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:16:16 "},"5_LIFE/3_COMPANY/":{"url":"5_LIFE/3_COMPANY/","title":"企业","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-11 15:57:34 "},"5_LIFE/3_COMPANY/PingAn.html":{"url":"5_LIFE/3_COMPANY/PingAn.html","title":"平安","keywords":"","body":" 中国平安保险(集团)股份 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-10 16:12:50 "},"5_LIFE/3_COMPANY/Tencent.html":{"url":"5_LIFE/3_COMPANY/Tencent.html","title":"腾讯","keywords":"","body":" 公司信息 企业名称： 深圳市腾讯计算机系统有限公司企业电话： 0755-86013388统一社会信用代码： 91440300708461136T组织机构代码： 708461136注册号： 440301103448669经营状态： 登记公司类型： 有限责任公司成立日期： 1998-11-11法定代表人： 马化腾营业期限： 1998-11-11 - 2018-11-11注册资本： 6500 万人民币发照日期： 2016-01-19登记机关： 深圳市市场监督管理局南山局企业地址： 深圳市南山区高新区高新南一路飞亚达大厦5-10楼经营范围： 计算机软、硬件的设计、技术开发、销售（不含专营、专控、专卖商品及限制项目）；数据库及计算机网络服务；国内商业、物资供销业（不含专营、专控、专卖商品）；第二类增值电信业务中的信息服务业务（不含固定网电话信息服务和互联网信息服务，并按许可证B2-20090028号文办）；信息服务业务（仅限互联网信息服务业务，并按许可证粤B2-20090059号文办）；从事广告业务（法律、行政法规规定应进行广告经营审批等级的，另行办理审批登记后方可经营）；网络游戏出版运营（凭有效的新出网证（粤）字010号互联网出版许可证经营）；货物及技术进出口。 参考：http://www.xiechuangw.com/ask/question/9768.html Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-26 21:20:25 "},"5_LIFE/4_THINK/":{"url":"5_LIFE/4_THINK/","title":"思考","keywords":"","body":"(空) Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-11 15:57:38 "},"5_LIFE/4_THINK/ProgrammerOver35Age.html":{"url":"5_LIFE/4_THINK/ProgrammerOver35Age.html","title":"程序员35岁之后，怎么抉择？","keywords":"","body":" 【思考】程序员35岁后做什么？ 参考：知乎：找工作时单位普遍要求 35 岁以下，那 35 岁以上的人都干嘛去了？ Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-10 16:14:08 "},"5_LIFE/5_HISTORY/":{"url":"5_LIFE/5_HISTORY/","title":"历史","keywords":"","body":" 通用电气公司(美国) 来源爱迪生创建的爱迪生电力公司 历史爱迪生发明直流电发电系统，但特斯拉发明了传输更远的交流电发电系统，爱迪生电力公司的股东们站在爱迪生的对立面：交流电发电，把爱迪生踢出决策圈。 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-16 16:17:52 "},"5_LIFE/6_NOUS/":{"url":"5_LIFE/6_NOUS/","title":"常识","keywords":"","body":"户口迁移,会改变籍贯 籍贯,是祖居地或原籍。 户口迁出，不会有发生改变。 Copyright (c) 2019 Front End Thomas Yang. all right reserved，powered by Gitbooktime： 2019-09-27 10:58:49 "}}